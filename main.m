clear; close; clc;
rng('default')
% if you want to increase simulation time, just increase the length of
% 'true_x' and 'true_y'.
true_x = [14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 5.72 5.1 4.48 3.86 3.24 2.62 2 1.38 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 2 2.62 3.24 3.86 3.86 3.86 3.86 3.86 3.86 3.86 4.48 5.1 5.72 6.34 6.96 7.58 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 5.72 5.1 5.1 5.1 5.1 5.1 5.1 5.72 6.34 6.96 7.58 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 16.26 16.88 17.5 18.12 18.74 19.36 19.98 20.6 20.6 20.6 20.6 20.6 19.98 19.36 18.74 18.12 17.5 16.88 16.26 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 5.72 5.1 4.48 3.86 3.24 2.62 2 1.38 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 2 2.62 3.24 3.86 3.86 3.86 3.86 3.86 3.86 3.86 4.48 5.1 5.72 6.34 6.96 7.58 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 5.72 5.1 5.1 5.1 5.1 5.1 5.1 5.72 6.34 6.96 7.58 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 16.26 16.88 17.5 18.12 18.74 19.36 19.98 20.6 20.6 20.6 20.6 20.6 19.98 19.36 18.74 18.12 17.5 16.88 16.26 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 5.72 5.1 4.48 3.86 3.24 2.62 2 1.38 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 2 2.62 3.24 3.86 3.86 3.86 3.86 3.86 3.86 3.86 4.48 5.1 5.72 6.34 6.96 7.58 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 5.72 5.1 5.1 5.1 5.1 5.1 5.1 5.72 6.34 6.96 7.58 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 16.26 16.88 17.5 18.12 18.74 19.36 19.98 20.6 20.6 20.6 20.6 20.6 19.98 19.36 18.74 18.12 17.5 16.88 16.26 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 5.72 5.1 4.48 3.86 3.24 2.62 2 1.38 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 2 2.62 3.24 3.86 3.86 3.86 3.86 3.86 3.86 3.86 4.48 5.1 5.72 6.34 6.96 7.58 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 5.72 5.1 5.1 5.1 5.1 5.1 5.1 5.72 6.34 6.96 7.58 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 16.26 16.88 17.5 18.12 18.74 19.36 19.98 20.6 20.6 20.6 20.6 20.6 19.98 19.36 18.74 18.12 17.5 16.88 16.26 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 6.34 5.72 5.1 4.48 3.86 3.24 2.62 2 1.38 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 0.76 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 1.38 2 2.62 3.24 3.86 3.86 3.86 3.86 3.86 3.86 3.86 4.48 5.1 5.72 6.34 6.96 7.58 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 15.64 15.02 14.4 13.78 13.16 12.54 11.92 11.3 10.68 10.06 9.44 8.82 8.2 7.58 6.96 6.34 5.72 5.1 5.1 5.1 5.1 5.1 5.1 5.72 6.34 6.96 7.58 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.2 8.82 9.44 10.06 10.68 11.3 11.92 12.54 13.16 13.78 14.4 15.02 15.64 16.26 16.88 17.5 18.12 18.74 19.36 19.98 20.6 20.6 20.6 20.6 20.6 19.98 19.36 18.74 18.12 17.5 16.88 16.26 15.64 15.02];
true_y = [22 22 22 22 22 22 22 22 22 22 22 22 22 22 21.38 20.76 20.14 19.52 18.9 18.28 17.66 17.04 16.42 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.18 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.22 9.6 8.98 8.36 7.74 7.12 6.5 5.88 5.26 4.64 4.02 3.4 2.78 2.16 1.54 1.54 2.16 2.78 3.4 4.02 4.64 5.26 5.88 6.5 7.12 7.74 8.36 8.98 9.6 10.22 10.84 11.46 12.08 12.7 13.32 13.94 14.56 14.56 14.56 14.56 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 12.26 12.88 13.5 14.12 14.56 14.56 14.56 14.56 14.56 14.56 15.18 15.8 16.42 17.04 17.66 18.28 18.9 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 20.14 20.76 21.38 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 21.38 20.76 20.14 19.52 18.9 18.28 17.66 17.04 16.42 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.18 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.22 9.6 8.98 8.36 7.74 7.12 6.5 5.88 5.26 4.64 4.02 3.4 2.78 2.16 1.54 1.54 2.16 2.78 3.4 4.02 4.64 5.26 5.88 6.5 7.12 7.74 8.36 8.98 9.6 10.22 10.84 11.46 12.08 12.7 13.32 13.94 14.56 14.56 14.56 14.56 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 12.26 12.88 13.5 14.12 14.56 14.56 14.56 14.56 14.56 14.56 15.18 15.8 16.42 17.04 17.66 18.28 18.9 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 20.14 20.76 21.38 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 21.38 20.76 20.14 19.52 18.9 18.28 17.66 17.04 16.42 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.18 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.22 9.6 8.98 8.36 7.74 7.12 6.5 5.88 5.26 4.64 4.02 3.4 2.78 2.16 1.54 1.54 2.16 2.78 3.4 4.02 4.64 5.26 5.88 6.5 7.12 7.74 8.36 8.98 9.6 10.22 10.84 11.46 12.08 12.7 13.32 13.94 14.56 14.56 14.56 14.56 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 12.26 12.88 13.5 14.12 14.56 14.56 14.56 14.56 14.56 14.56 15.18 15.8 16.42 17.04 17.66 18.28 18.9 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 20.14 20.76 21.38 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 21.38 20.76 20.14 19.52 18.9 18.28 17.66 17.04 16.42 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.18 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.22 9.6 8.98 8.36 7.74 7.12 6.5 5.88 5.26 4.64 4.02 3.4 2.78 2.16 1.54 1.54 2.16 2.78 3.4 4.02 4.64 5.26 5.88 6.5 7.12 7.74 8.36 8.98 9.6 10.22 10.84 11.46 12.08 12.7 13.32 13.94 14.56 14.56 14.56 14.56 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 12.26 12.88 13.5 14.12 14.56 14.56 14.56 14.56 14.56 14.56 15.18 15.8 16.42 17.04 17.66 18.28 18.9 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 20.14 20.76 21.38 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 21.38 20.76 20.14 19.52 18.9 18.28 17.66 17.04 16.42 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.8 15.18 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.22 9.6 8.98 8.36 7.74 7.12 6.5 5.88 5.26 4.64 4.02 3.4 2.78 2.16 1.54 1.54 2.16 2.78 3.4 4.02 4.64 5.26 5.88 6.5 7.12 7.74 8.36 8.98 9.6 10.22 10.84 11.46 12.08 12.7 13.32 13.94 14.56 14.56 14.56 14.56 14.56 13.94 13.32 12.7 12.08 11.46 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 10.84 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 11.64 12.26 12.88 13.5 14.12 14.56 14.56 14.56 14.56 14.56 14.56 15.18 15.8 16.42 17.04 17.66 18.28 18.9 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 19.52 20.14 20.76 21.38 22 22 22 22 22 22 22 22 22 22];
fused_x = zeros(1, length(true_x));
fused_y = zeros(1, length(true_x));
temp = zeros(length(true_x), 2);
for iii = 1: length(true_x)
    temp(iii,:) = normrnd([true_x(iii), true_y(iii)], 0.8);
end
pdr_x = temp(:,1);
pdr_y = temp(:,2);
var_pdr = zeros(1, length(true_x));
err_pdr = zeros(1, length(true_x));
count = 0;
for id = 1: length(true_x)
    err_pdr(id) = sqrt((true_x(id) - pdr_x(id))^2 + (true_y(id) - pdr_y(id))^2);
    %var_pdr(id) = (true_x(id) - pdr_x(id))^2 + (true_y(id) - pdr_y(id))^2;
    var_pdr(id) = 1.44;
end
% for plot
bc_x = [0 0 0 2.5 5.2 8.8 11.6 14.4 17.6 8 12];
bc_y = [3.8 8.8 15.75 12 16.6 25 17 25 17 9.6 9.6];
%% Plot
figure(1)
plot(bc_x, bc_y, 'rd', 'LineWidth',3, 'MarkerSize',5);
hold on
plot(true_x, true_y, 'b');
grid on
xlabel('X')
ylabel('Y')
axis square
%% Beacon in open space.
B1 = [17.6 17];
B2 = [14.4 25];
B3 = [11.6 17];
B4 = [8.8 25];
B5 = [5.2 16.6];
B6 = [0 15.75];
B7 = [2.5 12];
%% Beacon in long and narrow space.
B8 = [12 9.6];
B9 = [8 9.6];
B10 = [0 8.8];
B11 = [0 3.8];
B = [B1.', B2.', B3.', B4.', B5.', B6.', B7.', B8.', B9.', B10.', B11.'];
%%
for i = 1: length(true_x) % for animation
    d = zeros(1, length(B));
    mean_rss    =   zeros(1, length(B));
    act_rss     =   zeros(1, length(B));
    act_d       =   zeros(1, length(B));
    true_point  =   [true_x(i) true_y(i)].';
    for j = 1:length(B)
        d(j) = norm(true_point - B(:,j));
    end
    for ii = 1: length(d)
        mean_rss(ii)    =	get_mean_rss(d(ii));
        [act_rss(ii),~] =	get_actual_rss(mean_rss(ii));
        act_d(ii)       =	get_actual_distance(act_rss(ii));
    end
    min_d = mink(act_d,3); % extract 3 smallest distances (~ 3 strongest beacons) of all heard beacon.
    min_index = zeros(1, length(min_d)); % extract index of 3 strongest beacons.
    for k = 1: length(min_d)
        min_index(k) = find(min_d(k) == act_d);
    end
    %% LS-based position
    A = [B(1,min_index(2)) - B(1,min_index(1)), B(2,min_index(2)) - B(2,min_index(1)); B(1,min_index(3)) - B(1,min_index(1)), B(2,min_index(3)) - B(2,min_index(1))];
    d_temp = norm(B(:,min_index(1)))^2 - act_d(min_index(1))^2;
    b = 1/2*[norm(B(:,min_index(2)))^2 - act_d(min_index(2))^2 - d_temp; norm(B(:,min_index(3)))^2 - act_d(min_index(3))^2 - d_temp];
    x_ls = (A.'*A)\A.'*b;
    %% Improved LS-based position
    % Ref: http://www.ambrsoft.com/TrigoCalc/Circles2/circlrLine_.htm?fbclid=IwAR3EYQnm7_gr-vQuDIIIfqmdg-tCKDqbOlRm_rjEx48rY4pnOlkYbpmp2HM
    m = (x_ls(2)-B(2,min_index(1)))/(x_ls(1) - B(1,min_index(1)));
    dd = B(2,min_index(1)) - B(1,min_index(1))*m;
    delta = act_d(min_index(1))^2*(1+m^2) - ( B(2,min_index(1)) - m*B(1,min_index(1)) - dd )^2;
    x1 = (B(1,min_index(1)) + m*B(2,min_index(1)) - dd*m + sqrt(delta))/(1+m^2);
    x2 = (B(1,min_index(1)) + m*B(2,min_index(1)) - dd*m - sqrt(delta))/(1+m^2);
    y1 = (dd + B(1,min_index(1))*m + m^2*B(2,min_index(1)) + m*sqrt(delta))/(1+m^2);
    y2 = (dd + B(1,min_index(1))*m + m^2*B(2,min_index(1)) - m*sqrt(delta))/(1+m^2);
    p1 = [x1, y1].';
    p2 = [x2, y2].';
    if norm(x_ls - p1) > norm(x_ls - p2)
        x_lsa = p2;
    else
        x_lsa = p1;
    end
    %% Fusion
    fused_x(i) = pdr_x(i);
    fused_y(i) = pdr_y(i);
    [~, std]  = get_actual_rss(act_rss(min_index(1)));
    if act_rss(min_index(1)) > -70
        if min_index(1) == 8 ||  min_index(1) == 9 || min_index(1) == 10 || min_index(1) == 11
            mm = (pdr_y(i) - B(2,min_index(1)))/(pdr_x(i) - B(1,min_index(1)));
            dd2 = B(2,min_index(1)) - B(1,min_index(1))*mm;
            delta2 = act_d(min_index(1))^2*(1+mm^2) - (B(2,min_index(1)) - mm*B(1,min_index(1)) - dd2)^2;
            x11 = (B(1,min_index(1)) + mm*B(2,min_index(1)) - dd2*mm + sqrt(delta2))/(1+mm^2);
            x21 = (B(1,min_index(1)) + mm*B(2,min_index(1)) - dd2*mm - sqrt(delta2))/(1+mm^2);
            y12 = (dd2 + B(1,min_index(1))*mm + mm^2*B(2,min_index(1)) + mm*sqrt(delta2))/(1+mm^2);
            y22 = (dd2 + B(1,min_index(1))*mm + mm^2*B(2,min_index(1)) - mm*sqrt(delta2))/(1+mm^2);
            pp1 = [x11, y12].';
            pp2 = [x21, y22].';
            if sqrt((pdr_x(i) - x11)^2 + (pdr_y(i) - y12)^2) > sqrt((pdr_x(i) - x21)^2 + (pdr_y(i) - y22)^2)
                fused_x(i) = x21;
                fused_y(i) = y22;
            else
                fused_x(i) = x11;
                fused_y(i) = y12;
            end
            plot4 = plot(fused_x(i), fused_y(i), 'gs');
        else
            var_lsa = get_uncertainty_x_lsa(act_rss(min_index(1)), std);
            K = var_pdr(i)/(var_pdr(i) + var_lsa);
            fused_x(i) = fused_x(i) + K*(x_lsa(1) - pdr_x(i));
            fused_y(i) = fused_y(i) + K*(x_lsa(2) - pdr_y(i));
            plot4 = plot(fused_x(i), fused_y(i), 'ms');
            count = count + 1;
        end
    else
        fused_x(i) = pdr_x(i);
        fused_y(i) = pdr_y(i);
        plot4 = plot(fused_x(i), fused_y(i), 'ks');
    end
    error = sqrt((x_lsa(1) - true_x(i))^2+(x_lsa(2) - true_y(i))^2);
    %error = sqrt((fused_x(i) - true_x(i))^2+(fused_y(i) - true_y(i))^2);
    disp(error)
    plot1 = plot(true_x(i), true_y(i), 'ko');
    plot2 = plot(x_ls(1), x_ls(2), 'bo');
    plot3 = plot(x_lsa(1), x_lsa(2), 'r^');
    xlim([-3 27])
    ylim([-3 27])
    pause(0.1);
    delete(plot1);
    delete(plot2);
    delete(plot3);
end